import { CarrierNameOrId, DeliveryTypeId, PackageTypeName, PlatformNameOrId } from '@myparcel/constants';
import { RequestHeaders } from '../../../types/request.types';
import { WithRequired } from '../../../types/global.types';
import { AbstractPublicEndpoint } from '../../../model/endpoint/AbstractPublicEndpoint';
import { CreateDefinition } from '../../../model/endpoint/AbstractEndpoint.types';
import { DeliveryOption } from './DeliveryOption.types';

type Parameters = {
    carrier: CarrierNameOrId;
    cc: string;
    platform: PlatformNameOrId;
    postal_code: string;
    city?: string;
    cutoff_time?: string;
    delivery_date?: string;
    delivery_time?: string;
    deliverydays_window?: number;
    dropoff_days?: string;
    dropoff_delay?: number;
    exclude_delivery_type?: DeliveryTypeId;
    exclude_parcel_lockers?: boolean;
    include?: 'shipment_options' | string;
    latitude?: string;
    longitude?: string;
    monday_delivery?: boolean;
    number?: number;
    package_type?: PackageTypeName;
    saturday_delivery?: boolean;
    same_day_delivery?: boolean;
    street?: string;
};
/**
 * Either number or full street is required.
 */
export type DeliveryOptionsParameters = WithRequired<Parameters, 'number'> | WithRequired<Parameters, 'street'>;
type GetDeliveryOptionsDefinition = CreateDefinition<{
    name: typeof GetDeliveryOptions.name;
    parameters: DeliveryOptionsParameters;
    response: DeliveryOption[];
}>;
/**
 * Get available delivery options for given location. Note: This calls version 2 of the endpoint.
 */
export declare class GetDeliveryOptions extends AbstractPublicEndpoint<GetDeliveryOptionsDefinition> {
    readonly name = "getDeliveryOptions";
    readonly path = "delivery_options";
    readonly property = "deliveries";
    getHeaders(): RequestHeaders;
}
export {};
